<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>towerhawk-server</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Towerhawk Server</name>

    <parent>
        <groupId>org.towerhawk</groupId>
        <artifactId>towerhawk</artifactId>
        <version>0.1.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>

    <properties>
        <dockerfile.maven.plugin.version>1.3.6</dockerfile.maven.plugin.version>
        <docker.image.prefix>${project.parent.artifactId}</docker.image.prefix>
        <docker.uid>507</docker.uid>
        <spring.boot.version>1.5.10.RELEASE</spring.boot.version>
        <main.class>org.towerhawk.Towerhawk</main.class>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- for towerhawk-server -->
        <dependency>
            <groupId>org.towerhawk</groupId>
            <artifactId>towerhawk-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>io.github.lukehutch</groupId>-->
            <!--<artifactId>fast-classpath-scanner</artifactId>-->
            <!--<version>2.9.4</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.12</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/plugins</outputDirectory>
                            <resources>
                                <resource>
                                    <!-- all plugins are copied to this folder -->
                                    <directory>../plugins/plugins/</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${docker.image.prefix}/${project.parent.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <APP_NAME>${project.parent.artifactId}</APP_NAME>
                        <UID>${docker.uid}</UID>
                        <GID>${docker.uid}</GID>
                        <USER>${project.parent.artifactId}</USER>
                        <GROUP>${project.parent.artifactId}</GROUP>
                        <JAR>target/${project.build.finalName}.jar</JAR>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
